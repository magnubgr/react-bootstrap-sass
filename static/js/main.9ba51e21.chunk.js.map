{"version":3,"sources":["logo.svg","components/Home.js","components/About.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","About","Layout","Navbar","sticky","bg","variant","expand","to","exact","Brand","href","alt","src","logo","width","height","Toggle","aria-controls","Collapse","id","Nav","Container","fluid","style","padding","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sHAAAA,EAAOC,QAAU,IAA0B,kC,wMCyE5BC,MAvEf,WACE,OACE,yBAAKC,UAAU,QAEb,mCAEA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,cAAf,SAMF,yBAAKA,UAAU,aACb,yBAAKA,UAAU,mBAAf,eAOF,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,qCCgBSC,MAhFf,WAEE,OACE,yBAAKD,UAAU,SAEb,oCAIA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,cAAf,SAMF,yBAAKA,UAAU,aACb,yBAAKA,UAAU,mBAAf,eAaF,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,sC,wBCdSE,MA3Cf,WACE,OACE,yBAAKF,UAAU,UAEb,kBAAC,IAAD,KACE,kBAACG,EAAA,EAAD,CAAQC,OAAO,MAAMC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,MACnD,kBAAC,IAAD,CAASC,GAAG,IAAIC,OAAK,GACnB,kBAACN,EAAA,EAAOO,MAAR,CAAcC,KAAK,SACjB,yBACEC,IAAI,GACJC,IAAKC,IACLC,MAAM,KACNC,OAAO,KACPhB,UAAU,6BACT,IAPL,wBAWF,kBAACG,EAAA,EAAOc,OAAR,CAAeC,gBAAc,qBAC7B,kBAACf,EAAA,EAAOgB,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKrB,UAAU,WACb,kBAAC,IAAD,CAASQ,GAAG,IAAIC,OAAK,EAACT,UAAU,YAAhC,QAGA,kBAAC,IAAD,CAASQ,GAAG,SAASR,UAAU,YAA/B,YAON,kBAACsB,EAAA,EAAD,CAAWC,OAAK,EAACC,MAAO,CAACC,QAAS,QAC9B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIjB,OAAK,EAACkB,UAAW5B,IACjC,kBAAC,IAAD,CAAO2B,KAAK,SAASC,UAAW1B,SCrCjC2B,MAVf,WACE,OACE,yBAAK5B,UAAU,OAEb,kBAAC,EAAD,QCGc6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9ba51e21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"Home\">\r\n\r\n      <p>Home</p>\r\n\r\n      <div className=\"blue\">\r\n        <div className=\"blue__text\">\r\n          Blue\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"otherBlue\">\r\n        <div className=\"otherBlue__text\">\r\n          Other Blue\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n      <p>Home</p>\r\n\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nfunction About() {\r\n\r\n  return (\r\n    <div className=\"About\">\r\n\r\n      <p>About</p>\r\n\r\n\r\n\r\n      <div className=\"blue\">\r\n        <div className=\"blue__text\">\r\n          Blue\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"otherBlue\">\r\n        <div className=\"otherBlue__text\">\r\n          Other Blue\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n      <p>About</p>\r\n\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport logo from '../logo.svg';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\n\r\nimport Home from './Home.js';\r\nimport About from './About.js';\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\n\r\nfunction Layout() {\r\n  return (\r\n    <div className=\"Layout\">\r\n\r\n      <Router>\r\n        <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n          <NavLink to=\"/\" exact>\r\n            <Navbar.Brand href=\"#home\">\r\n              <img\r\n                alt=\"\"\r\n                src={logo}\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n              />{' '}\r\n              Magnus Gr√∏ndalen\r\n            </Navbar.Brand>\r\n          </NavLink>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <NavLink to=\"/\" exact className=\"nav-link\">\r\n                  Home\r\n              </NavLink>\r\n              <NavLink to=\"/about\" className=\"nav-link\">\r\n                  About\r\n              </NavLink>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n        <Container fluid style={{padding: \"0px\"}}>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/about\" component={About} />\r\n            </Switch>\r\n        </Container>\r\n      </Router>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\nimport './sass/style.scss';\n\nimport Layout from './components/Layout.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Layout />\n\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}